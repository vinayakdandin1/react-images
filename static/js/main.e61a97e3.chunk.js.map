{"version":3,"sources":["api/unsplash.js","components/SearchBar.js","components/ImageCard.js","components/ImageList.js","components/App.js","index.js"],"names":["axios","create","baseURL","headers","Authorization","SearchBar","state","term","onFormSubmit","event","preventDefault","props","onSubmit","className","this","type","value","onChange","e","setState","target","React","Component","ImageCard","setSpans","height","imageRef","current","clientHeight","spans","Math","ceil","createRef","addEventListener","image","description","urls","style","gridRowEnd","ref","src","regular","alt","ImageList","images","map","key","id","App","onSearchSubmit","a","unsplash","get","params","query","response","data","results","marginTop","ReactDOM","render","document","querySelector"],"mappings":"8PAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,2BACTC,QAAS,CACPC,cAAe,2DCwBJC,E,4MA1BbC,MAAQ,CAAEC,KAAM,I,EAEhBC,aAAe,SAACC,GACdA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKN,MAAMC,O,uDAGvB,IAAD,OACP,OACE,yBAAKM,UAAU,cACb,0BAAMD,SAAUE,KAAKN,aAAcK,UAAU,WAC3C,yBAAKA,UAAU,SACb,+CACA,2BACEE,KAAK,OACLC,MAAOF,KAAKR,MAAMC,KAClBU,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAAEZ,KAAMW,EAAEE,OAAOJ,kB,GAlBtCK,IAAMC,WC+BfC,G,wDA9Bb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IAWRa,SAAW,WACT,IAAMC,EAAS,EAAKC,SAASC,QAAQC,aAE/BC,EAAQC,KAAKC,KAAKN,EAAS,IACjC,EAAKN,SAAS,CAAEU,WAbhB,EAAKvB,MAAQ,CAAEuB,MAAO,GAEtB,EAAKH,SAAWL,IAAMW,YALL,E,gEASjBlB,KAAKY,SAASC,QAAQM,iBAAiB,OAAQnB,KAAKU,Y,+BAU5C,IAAD,EACuBV,KAAKH,MAAMuB,MAAjCC,EADD,EACCA,YAAaC,EADd,EACcA,KAErB,OACE,yBAAKC,MAAO,CAAEC,WAAW,QAAD,OAAUxB,KAAKR,MAAMuB,SAC3C,yBAAKU,IAAKzB,KAAKY,SAAUc,IAAKJ,EAAKK,QAASC,IAAKP,S,GAzBjCd,IAAMC,YCUfqB,EARG,SAAChC,GACjB,IAAMiC,EAASjC,EAAMiC,OAAOC,KAAI,SAACX,GAC/B,OAAO,kBAAC,EAAD,CAAWY,IAAKZ,EAAMa,GAAIb,MAAOA,OAG1C,OAAO,yBAAKrB,UAAU,cAAc+B,ICsBvBI,E,4MAzBb1C,MAAQ,CAAEsC,OAAQ,I,EAElBK,e,uCAAiB,WAAO1C,GAAP,eAAA2C,EAAA,sEACQC,EAASC,IAAI,iBAAkB,CACpDC,OAAQ,CAAEC,MAAO/C,KAFJ,OACTgD,EADS,OAKf,EAAKpC,SAAS,CAAEyB,OAAQW,EAASC,KAAKC,UALvB,2C,6GASf,OACE,yBACE5C,UAAU,eACVwB,MAAO,CACLqB,UAAW,SAGb,kBAAC,EAAD,CAAW9C,SAAUE,KAAKmC,iBAC1B,kBAAC,EAAD,CAAWL,OAAQ9B,KAAKR,MAAMsC,c,GApBpBvB,IAAMC,WCDxBqC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.e61a97e3.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n  baseURL: 'https://api.unsplash.com',\r\n  headers: {\r\n    Authorization: 'Client-ID l8mbdke1-G1pkbQtnjJ424Ab6XJIGTrMCuHeBTMbrBY',\r\n  },\r\n});\r\n","import React from 'react';\r\n\r\nclass SearchBar extends React.Component {\r\n  state = { term: '' };\r\n\r\n  onFormSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className='ui segment'>\r\n        <form onSubmit={this.onFormSubmit} className='ui form'>\r\n          <div className='field'>\r\n            <label>Image search</label>\r\n            <input\r\n              type='text'\r\n              value={this.state.term}\r\n              onChange={(e) => this.setState({ term: e.target.value })}\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nclass ImageCard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { spans: 0 };\r\n\r\n    this.imageRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.imageRef.current.addEventListener('load', this.setSpans);\r\n  }\r\n\r\n  setSpans = () => {\r\n    const height = this.imageRef.current.clientHeight;\r\n\r\n    const spans = Math.ceil(height / 10);\r\n    this.setState({ spans });\r\n  };\r\n\r\n  render() {\r\n    const { description, urls } = this.props.image;\r\n\r\n    return (\r\n      <div style={{ gridRowEnd: `span ${this.state.spans}` }}>\r\n        <img ref={this.imageRef} src={urls.regular} alt={description} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageCard;\r\n","import './ImageList.css';\r\nimport React from 'react';\r\nimport ImageCard from './ImageCard';\r\n\r\nconst ImageList = (props) => {\r\n  const images = props.images.map((image) => {\r\n    return <ImageCard key={image.id} image={image} />;\r\n  });\r\n\r\n  return <div className='image-list'>{images}</div>;\r\n};\r\n\r\nexport default ImageList;\r\n","import React from 'react';\r\nimport unsplash from '../api/unsplash';\r\nimport SearchBar from './SearchBar';\r\nimport ImageList from './ImageList';\r\n\r\nclass App extends React.Component {\r\n  state = { images: [] };\r\n\r\n  onSearchSubmit = async (term) => {\r\n    const response = await unsplash.get('/search/photos', {\r\n      params: { query: term },\r\n    });\r\n\r\n    this.setState({ images: response.data.results });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className='ui container'\r\n        style={{\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        <SearchBar onSubmit={this.onSearchSubmit} />\r\n        <ImageList images={this.state.images} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));"],"sourceRoot":""}